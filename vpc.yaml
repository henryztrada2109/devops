AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template deploys a VPC, with two public subnets  spread across two Availabilty Zones. 
  It deploys an Internet Gateway, with a default route on the public subnets. 

  This template also deploys one security groups to route traffic.

Parameters:

  ResourcePrefix:
    Type: String

  CidrBlock:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 172.17.0.0/16


Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '172.17.30.0/24'
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${ResourcePrefix} Vpc

  VpcCidrBlock2:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '172.17.31.0/24'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ResourcePrefix} InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs { Ref: "AWS::Region" } ]
      CidrBlock: '172.17.30.0/24'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ResourcePrefix} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs { Ref: "AWS::Region" } ]
      CidrBlock: '172.17.31.0/24'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ResourcePrefix} Public Subnet (AZ2)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ResourcePrefix} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupName: !Sub "${ResourcePrefix} SG EC2 Public"
      GroupDescription: !Sub "${ResourcePrefix} SG EC2 Public"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: !Sub "${ResourcePrefix} SG EC2 Public"

  PublicSubnetsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${ResourcePrefix}/vpc/subnet/public/list"
      Type: String
      Description: A list of the public subnets
      Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]

  PublicSubnet01Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${ResourcePrefix}/vpc/subnet/public/list/0"
      Type: String
      Description: A list of the public subnets
      Value: !Ref PublicSubnet1

  PublicSubnet02Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${ResourcePrefix}/vpc/subnet/public/list/1"
      Type: String
      Description: A list of the public subnets
      Value: !Ref PublicSubnet2

  Ec2SecurityGroupParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${ResourcePrefix}/vpc/securityGroup/public"
      Type: String
      Description: A security group attachment to vpc for network public
      Value: !Ref Ec2SecurityGroup
